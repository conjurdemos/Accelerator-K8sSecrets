---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app-example-file-sidecar
  name: app-example-file-sidecar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-example-file-sidecar
  template:
    metadata:
      labels:
        app: app-example-file-sidecar
      annotations:
        conjur.org/log-level: debug
        conjur.org/container-mode: sidecar
        conjur.org/secrets-destination: file
        conjur.org/jwt-token-path: /var/run/secrets/tokens/jwt
        conjur.org/conjur-secrets.test-app: |
          - DB_HOSTNAME: data/vault/{{SAFE_NAME}}/{{MYSQL_ACCOUNT_NAME}}/address
          - DB_NAME: data/vault/{{SAFE_NAME}}/{{MYSQL_ACCOUNT_NAME}}/Database
          - DB_UNAME: data/vault/{{SAFE_NAME}}/{{MYSQL_ACCOUNT_NAME}}/username
          - DB_PWD: data/vault/{{SAFE_NAME}}/{{MYSQL_ACCOUNT_NAME}}/password
        conjur.org/secret-file-path.test-app: "./secrets.json"
        conjur.org/secret-file-format.test-app: "json"
        conjur.org/secrets-refresh-interval: 10s
    spec:
      serviceAccountName: {{JWT_SERVICE_ACCOUNT}}

      containers:
                           # Application image
      - name: test-app
        image: {{APP_IMAGE}}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: conjur-secrets
            mountPath: /conjur
            readOnly: true

                           # K8s Secrets Provider
      - name: secrets-provider
        image: cyberark/secrets-provider-for-k8s:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: conjur-status
          mountPath: /conjur/status
        - name: podinfo
          mountPath: /conjur/podinfo
        - name: conjur-secrets
          mountPath: /conjur
        - name: jwt-token
          mountPath: /var/run/secrets/tokens
        env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        envFrom:
          - configMapRef:
                name: conjur-connect

      volumes:
        # Contains sentinel files the app container can use to detect
        #  when Provider creates/updates secrets
        - name: conjur-status
          emptyDir:
            medium: Memory

        # Makes pod metadata available to pod
        - name: podinfo
          downwardAPI:
            items:
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations

        # Secrets file location
        - name: conjur-secrets
          emptyDir:
            medium: Memory

        # Projected SA token with custom TTL
        #  & audience value that matches authn-jwt config
        - name: jwt-token
          projected:
            sources:
              - serviceAccountToken:
                  path: jwt
                  expirationSeconds: 6000
                  audience: conjur
